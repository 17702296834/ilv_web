#!/usr/bin/env python3
#-*-code:utf8-*-

# system library
import datetime

'''
This is class for control time
'''

####################################################################################################
# ilv.Time.Time
####################################################################################################
class Time:
    ################################################################################################
    # I Standard params
    ################################################################################################
    timeStr = None
    ################################################################################################
    # II Prepare methods
    ################################################################################################
    ################################################################################################
    # II Prepare methods
    ################################################################################################
    ############################################################################################
    # 1 constructor
    ############################################################################################
    def __init__(self,timeStr=None):
        if timeStr is None:
            now = datetime.datetime.now()
            timeStr = str(now)
        self.timeStr = timeStr
        pass
    ############################################################################################
    # 2 refresh
    ############################################################################################
    def refresh(self,timeStr):
        if timeStr is None:
            now = datetime.datetime.now()
            timeStr = str(now)
        self.timeStr = timeStr
        pass
    ############################################################################################
    # 3 datetime
    ############################################################################################
    def datetime(self,dtstr=None):
        if dtstr is None:
            return datetime.datetime.today()
        year = int(dtstr[:4])
        month = int(dtstr[5:7])
        day = int(dtstr[8:10])
        hour = int(dtstr[11:13])
        minute = int(dtstr[14:16])
        second = int(dtstr[17:19])
        #microsecond = int(dtstr[20:23])*1000
        return datetime.datetime(year,month,day,hour,minute,second)
    ############################################################################################
    # 4 timedelta
    ############################################################################################
    def timedelta(self,dtstr=None):
        if dtstr is None:
            return datetime.timedelta()
        years = int(dtstr[:4])
        months = int(dtstr[5:7])
        days = int(dtstr[8:10])
        hours = int(dtstr[11:13])
        minutes = int(dtstr[14:16])
        seconds = int(dtstr[17:19])
        return datetime.timedelta(days=days,hours=hours,minutes=minutes,seconds=seconds)   
    ################################################################################################
    # III Main methods
    ################################################################################################
    ############################################################################################
    # 1 getDatetime
    ############################################################################################
    def getDatetime(self):
        dt = None
        if self.timeStr:
            tmpStr = self.timeStr
            dt = ""
            dt += tmpStr[:4]+"-"+tmpStr[5:7]+"-"+tmpStr[8:10]
            dt += " "+tmpStr[11:13]+":"+tmpStr[14:16]+":"+tmpStr[17:19]
        return dt
        pass
    ############################################################################################
    # 2 getMillisecond
    ############################################################################################
    def getMillisecond(self):
        ms = None
        if self.timeStr:
            tmpStr = self.timeStr
            ms = tmpStr[20:]
            if len(ms)>2:
                ms = ms[:-3]
            else:
                ms = "000"
            while len(ms)<3:
                ms = "0"+ms
        return ms
        pass
    ################################################################################################
    # IV Helpful methods
    ################################################################################################  
    pass
